{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "txHash": "0xdd21d1b422a232e2293b196c29fae21ce574d9b524dd35666701b476651b8c81"
  },
  "proxies": [
    {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0x1e7ae38488b7e13d30889f18a29dedd5dc65229a03c1c65fd1616fc2af3ce920",
      "kind": "transparent"
    },
    {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0xee772c89df28fb5cc8020d2ff166984ed6b65b5b44a182de35b7ac0f0a4cfef4",
      "kind": "transparent"
    },
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x73a127122f0d68278e1bde0a1aeb2817b8d7f32cc5503171c64f4199f56467aa",
      "kind": "transparent"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0x3d76456a08f2d071c66d7f2c24379a573e302cfd6965734a986b2908d0303697",
      "kind": "transparent"
    },
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0x12a590f568ffe4374fc83cfb38e1bebf4fd54bfec390a3ca6043f98c9b4811f8",
      "kind": "transparent"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xcce9a3720b1269f0f60b48baf55f939e4e8c6861d46ce9277f600f599383caa8",
      "kind": "transparent"
    },
    {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0x5ca7113f62e14aeaca84cfbd07ec36d9cffb35b6a7ba09f5c2d73fa20ec70d97",
      "kind": "transparent"
    },
    {
      "address": "0x959922bE3CAee4b8Cd9a407cc3ac1C251C2007B1",
      "txHash": "0x507ee50fcb5a0cef056cbd6deda211f4f6dd5924eb3e126c52775c44313ac37e",
      "kind": "transparent"
    },
    {
      "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
      "txHash": "0xdcffe42b75f026b843d9aad6eb7aed2eb9949bc0c5a8de75759e06ab8640fb70",
      "kind": "transparent"
    },
    {
      "address": "0x59b670e9fA9D0A427751Af201D676719a970857b",
      "txHash": "0xbeee59b8ec26bb191fb444ecfa923ca92e340fda9cce16bf5a52e7dc9a3bafa5",
      "kind": "transparent"
    }
  ],
  "impls": {
    "8c8fa1e8831094d960cad1cba7fd7079587f0c6a84e50042e1600290f7f95c0e": {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xec5e1882bdeea426a0b3622035698aa9387668727946c567fb0bdb54cc036e19",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol:51"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PresetMinterPauserUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol:144"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "451",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "501",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:44"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "502",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:46"
          },
          {
            "label": "proxyRegistryAddress",
            "offset": 0,
            "slot": "503",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:48"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "504",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:49"
          },
          {
            "label": "customUri",
            "offset": 0,
            "slot": "505",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:50"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "506",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:52"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "507",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:54"
          },
          {
            "label": "verifier",
            "offset": 0,
            "slot": "508",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:23"
          },
          {
            "label": "metaverseOwners",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:24"
          },
          {
            "label": "metaverseNftCollections",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:25"
          },
          {
            "label": "metaverseZones",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20591_storage))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:26"
          },
          {
            "label": "minted",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:27"
          },
          {
            "label": "parameterControlAdd",
            "offset": 0,
            "slot": "513",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:32"
          },
          {
            "label": "sigDataUsed",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:225"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20591_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct SharedStructsCrossChain.zone))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(zone)20591_storage)": {
            "label": "mapping(uint256 => struct SharedStructsCrossChain.zone)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3588_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3287_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3287_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(zone)20591_storage": {
            "label": "struct SharedStructsCrossChain.zone",
            "members": [
              {
                "label": "zoneIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "coreTeamAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "collAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "typeZone",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "rockIndexFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rockIndexTo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "eb17c12b0430cb7afb801e335b359670944070481790d8160234251069be8783": {
      "address": "0xB7f8BC63BbcaD18155201308C8f3540b07f84F5e",
      "txHash": "0x57caa3955f5f33aa9039a2c92122104d95dec59da1b30a6a61846c1c91e5dcc6",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol:51"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PresetMinterPauserUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol:144"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "451",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "501",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:44"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "502",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:46"
          },
          {
            "label": "proxyRegistryAddress",
            "offset": 0,
            "slot": "503",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:48"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "504",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:49"
          },
          {
            "label": "customUri",
            "offset": 0,
            "slot": "505",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:50"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "506",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:52"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "507",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:54"
          },
          {
            "label": "verifier",
            "offset": 0,
            "slot": "508",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:23"
          },
          {
            "label": "metaverseOwners",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:24"
          },
          {
            "label": "metaverseNftCollections",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:25"
          },
          {
            "label": "metaverseZones",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20533_storage))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:26"
          },
          {
            "label": "minted",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:27"
          },
          {
            "label": "parameterControlAdd",
            "offset": 0,
            "slot": "513",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:32"
          },
          {
            "label": "sigDataUsed",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:225"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20533_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct SharedStructsCrossChain.zone))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(zone)20533_storage)": {
            "label": "mapping(uint256 => struct SharedStructsCrossChain.zone)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3588_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3287_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3287_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(zone)20533_storage": {
            "label": "struct SharedStructsCrossChain.zone",
            "members": [
              {
                "label": "zoneIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "coreTeamAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "collAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "typeZone",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "rockIndexFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rockIndexTo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "de002f6f112b992b4fb630d91860a79864fa84a8f2c4ac6090c98dbd6ebddabb": {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0xa3caac21de8aeb6ad2614878d2482d6b94eac7c0c63d6419367031b33f1c2520",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol:51"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PresetMinterPauserUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol:144"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "451",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "501",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:44"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "502",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:46"
          },
          {
            "label": "proxyRegistryAddress",
            "offset": 0,
            "slot": "503",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:48"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "504",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:49"
          },
          {
            "label": "customUri",
            "offset": 0,
            "slot": "505",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:50"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "506",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:52"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "507",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:54"
          },
          {
            "label": "verifier",
            "offset": 0,
            "slot": "508",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:23"
          },
          {
            "label": "metaverseOwners",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:24"
          },
          {
            "label": "metaverseNftCollections",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:25"
          },
          {
            "label": "metaverseZones",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20517_storage))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:26"
          },
          {
            "label": "minted",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:27"
          },
          {
            "label": "parameterControlAdd",
            "offset": 0,
            "slot": "513",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:32"
          },
          {
            "label": "sigDataUsed",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:225"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20517_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct SharedStructsCrossChain.zone))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(zone)20517_storage)": {
            "label": "mapping(uint256 => struct SharedStructsCrossChain.zone)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3588_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3287_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3287_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(zone)20517_storage": {
            "label": "struct SharedStructsCrossChain.zone",
            "members": [
              {
                "label": "zoneIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "coreTeamAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "collAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "typeZone",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "rockIndexFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rockIndexTo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "34ac7422af606ecdf360800aaf7320e6367aca696d658911bce564bb44bb414c": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0x61e0dad5bcaccfeb3fcde9c10eed0b533ba44417067da424f333528484707735",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol:51"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PresetMinterPauserUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol:144"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "451",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "501",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:44"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "502",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:46"
          },
          {
            "label": "proxyRegistryAddress",
            "offset": 0,
            "slot": "503",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:48"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "504",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:49"
          },
          {
            "label": "customUri",
            "offset": 0,
            "slot": "505",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:50"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "506",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:52"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "507",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:54"
          },
          {
            "label": "verifier",
            "offset": 0,
            "slot": "508",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:23"
          },
          {
            "label": "metaverseOwners",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:24"
          },
          {
            "label": "metaverseNftCollections",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:25"
          },
          {
            "label": "metaverseZones",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20496_storage))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:26"
          },
          {
            "label": "minted",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:27"
          },
          {
            "label": "parameterControlAdd",
            "offset": 0,
            "slot": "513",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:32"
          },
          {
            "label": "sigDataUsed",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:225"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20496_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct SharedStructsCrossChain.zone))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(zone)20496_storage)": {
            "label": "mapping(uint256 => struct SharedStructsCrossChain.zone)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3588_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3287_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3287_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(zone)20496_storage": {
            "label": "struct SharedStructsCrossChain.zone",
            "members": [
              {
                "label": "zoneIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "coreTeamAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "collAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "typeZone",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "rockIndexFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rockIndexTo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "7ade35d3142b1ec443215f300744a399ee67c0b55a44cffb91417539cb914cbb": {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x5f3f9b7fe755b37f063dfa528e6446a31edcf0d78eb6f52d1d3e08763d42f3cd",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol:51"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PresetMinterPauserUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol:144"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "451",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "501",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:44"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "502",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:46"
          },
          {
            "label": "proxyRegistryAddress",
            "offset": 0,
            "slot": "503",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:48"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "504",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:49"
          },
          {
            "label": "customUri",
            "offset": 0,
            "slot": "505",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:50"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "506",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:52"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "507",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:54"
          },
          {
            "label": "verifier",
            "offset": 0,
            "slot": "508",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:23"
          },
          {
            "label": "metaverseOwners",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:24"
          },
          {
            "label": "metaverseNftCollections",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:25"
          },
          {
            "label": "metaverseZones",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20486_storage))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:26"
          },
          {
            "label": "minted",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:27"
          },
          {
            "label": "parameterControlAdd",
            "offset": 0,
            "slot": "513",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:32"
          },
          {
            "label": "sigDataUsed",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:225"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20486_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct SharedStructsCrossChain.zone))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(zone)20486_storage)": {
            "label": "mapping(uint256 => struct SharedStructsCrossChain.zone)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3588_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3287_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3287_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(zone)20486_storage": {
            "label": "struct SharedStructsCrossChain.zone",
            "members": [
              {
                "label": "zoneIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "coreTeamAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "collAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "typeZone",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "rockIndexFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rockIndexTo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d382b56ccafd17b19290ef9eb9896924a42e57f6c44f7ea28f30489446147786": {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x88834361e393c29a3728ec9ec7e5dbff59ca117bb84fa79b8cdfa1988b8d22b1",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol:51"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PresetMinterPauserUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol:144"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "451",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "501",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:44"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "502",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:46"
          },
          {
            "label": "proxyRegistryAddress",
            "offset": 0,
            "slot": "503",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:48"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "504",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:49"
          },
          {
            "label": "customUri",
            "offset": 0,
            "slot": "505",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:50"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "506",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:52"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "507",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:54"
          },
          {
            "label": "verifier",
            "offset": 0,
            "slot": "508",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:25"
          },
          {
            "label": "metaverseOwners",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:26"
          },
          {
            "label": "metaverseNftCollections",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:27"
          },
          {
            "label": "metaverseZones",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20850_storage))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:28"
          },
          {
            "label": "minted",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:29"
          },
          {
            "label": "parameterControlAdd",
            "offset": 0,
            "slot": "513",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:34"
          },
          {
            "label": "sigDataUsed",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:227"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20850_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct SharedStructsCrossChain.zone))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(zone)20850_storage)": {
            "label": "mapping(uint256 => struct SharedStructsCrossChain.zone)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3588_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3287_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3287_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(zone)20850_storage": {
            "label": "struct SharedStructsCrossChain.zone",
            "members": [
              {
                "label": "zoneIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "coreTeamAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "collAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "typeZone",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "rockIndexFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rockIndexTo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6ff06350ab0ffe320ae21476629de0d637294893d32e55e088bd25f520f1c25e": {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0x8bc11be62b79e03621c68159e3418753efc2940c9c9d9313e0561c1b307987dc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol:51"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PresetMinterPauserUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol:144"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "451",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "501",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:44"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "502",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:46"
          },
          {
            "label": "proxyRegistryAddress",
            "offset": 0,
            "slot": "503",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:48"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "504",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:49"
          },
          {
            "label": "customUri",
            "offset": 0,
            "slot": "505",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:50"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "506",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:52"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "507",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:54"
          },
          {
            "label": "verifier",
            "offset": 0,
            "slot": "508",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:25"
          },
          {
            "label": "metaverseOwners",
            "offset": 0,
            "slot": "509",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:26"
          },
          {
            "label": "metaverseNftCollections",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:27"
          },
          {
            "label": "metaverseZones",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20850_storage))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:28"
          },
          {
            "label": "minted",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:29"
          },
          {
            "label": "parameterControlAdd",
            "offset": 0,
            "slot": "513",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:34"
          },
          {
            "label": "sigDataUsed",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:227"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20850_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct SharedStructsCrossChain.zone))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(zone)20850_storage)": {
            "label": "mapping(uint256 => struct SharedStructsCrossChain.zone)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3588_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3287_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3287_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(zone)20850_storage": {
            "label": "struct SharedStructsCrossChain.zone",
            "members": [
              {
                "label": "zoneIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "coreTeamAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "collAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "typeZone",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "rockIndexFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rockIndexTo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4fbcb7922a96bc55e5f47bdc97be939ff7da28707bcd919b33cd53b8ef8f03fd": {
      "address": "0x0B306BF915C4d645ff596e518fAf3F9669b97016",
      "txHash": "0x8c9bd5a439367f7a3fb6a62c235b546b7714f7f6b7f48da42231e04d8f393270",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol:51"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PresetMinterPauserUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol:144"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "451",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "501",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:44"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "502",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:46"
          },
          {
            "label": "proxyRegistryAddress",
            "offset": 0,
            "slot": "503",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:48"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "504",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:49"
          },
          {
            "label": "customUri",
            "offset": 0,
            "slot": "505",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:50"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "506",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:52"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "507",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:54"
          },
          {
            "label": "verifier",
            "offset": 0,
            "slot": "508",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:25"
          },
          {
            "label": "parameterControlAdd",
            "offset": 0,
            "slot": "509",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:26"
          },
          {
            "label": "metaverseOwners",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:27"
          },
          {
            "label": "metaverseNftCollections",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:28"
          },
          {
            "label": "metaverseZones",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20850_storage))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:29"
          },
          {
            "label": "minted",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:30"
          },
          {
            "label": "sigDataUsed",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20850_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct SharedStructsCrossChain.zone))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(zone)20850_storage)": {
            "label": "mapping(uint256 => struct SharedStructsCrossChain.zone)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3588_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3287_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3287_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(zone)20850_storage": {
            "label": "struct SharedStructsCrossChain.zone",
            "members": [
              {
                "label": "zoneIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "coreTeamAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "collAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "typeZone",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "rockIndexFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rockIndexTo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "68aba8b617f7eaef2630cd56a4fee9514885cf9848f0349e15d423b5086fb526": {
      "address": "0x68B1D87F95878fE05B998F19b66F4baba5De1aed",
      "txHash": "0xae6c75e53b9c0a04a9cc31096d73b69d9ef7243e5bfb9d63ec01005402304ac0",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol:51"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PresetMinterPauserUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol:144"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "451",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "501",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:44"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "502",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:46"
          },
          {
            "label": "proxyRegistryAddress",
            "offset": 0,
            "slot": "503",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:48"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "504",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:49"
          },
          {
            "label": "customUri",
            "offset": 0,
            "slot": "505",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:50"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "506",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:52"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "507",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:54"
          },
          {
            "label": "verifier",
            "offset": 0,
            "slot": "508",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:25"
          },
          {
            "label": "parameterControlAdd",
            "offset": 0,
            "slot": "509",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:26"
          },
          {
            "label": "metaverseOwners",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:27"
          },
          {
            "label": "metaverseNftCollections",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:28"
          },
          {
            "label": "metaverseZones",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20856_storage))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:29"
          },
          {
            "label": "minted",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:30"
          },
          {
            "label": "sigDataUsed",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20856_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct SharedStructsCrossChain.zone))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(zone)20856_storage)": {
            "label": "mapping(uint256 => struct SharedStructsCrossChain.zone)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3588_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3287_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3287_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(zone)20856_storage": {
            "label": "struct SharedStructsCrossChain.zone",
            "members": [
              {
                "label": "zoneIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "coreTeamAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "collAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "typeZone",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "rockIndexFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rockIndexTo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e09147ad4b9c8db8c620f134017902367197930210b776d74a4e1341bdce6a6d": {
      "address": "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      "txHash": "0x5495d07d2e7f29e67172e5e697961badadc614545c8402d8765f8e060baf3366",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:247"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:522"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "301",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155PausableUpgradeable.sol:51"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "401",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155PresetMinterPauserUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/presets/ERC1155PresetMinterPauserUpgradeable.sol:144"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "451",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "452",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "admin",
            "offset": 0,
            "slot": "501",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:44"
          },
          {
            "label": "operator",
            "offset": 0,
            "slot": "502",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:46"
          },
          {
            "label": "proxyRegistryAddress",
            "offset": 0,
            "slot": "503",
            "type": "t_address",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:48"
          },
          {
            "label": "creators",
            "offset": 0,
            "slot": "504",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:49"
          },
          {
            "label": "customUri",
            "offset": 0,
            "slot": "505",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:50"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "506",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:52"
          },
          {
            "label": "symbol",
            "offset": 0,
            "slot": "507",
            "type": "t_string_storage",
            "contract": "ERC1155TradableForRockCrossChain",
            "src": "contracts/utils/ERC1155TradableForRockCrossChain.sol:54"
          },
          {
            "label": "verifier",
            "offset": 0,
            "slot": "508",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:22"
          },
          {
            "label": "parameterControlAdd",
            "offset": 0,
            "slot": "509",
            "type": "t_address",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:23"
          },
          {
            "label": "metaverseOwners",
            "offset": 0,
            "slot": "510",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:24"
          },
          {
            "label": "metaverseNftCollections",
            "offset": 0,
            "slot": "511",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:25"
          },
          {
            "label": "metaverseZones",
            "offset": 0,
            "slot": "512",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20912_storage))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:26"
          },
          {
            "label": "minted",
            "offset": 0,
            "slot": "513",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:27"
          },
          {
            "label": "sigDataUsed",
            "offset": 0,
            "slot": "514",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "RockNFTCollectionHolderCrossChain",
            "src": "contracts/goods/RockNFTCollectionHolderCrossChain.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)3588_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
            "label": "mapping(uint256 => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(uint256 => mapping(address => mapping(uint256 => bool)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(zone)20912_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct SharedStructsCrossChain.zone))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(zone)20912_storage)": {
            "label": "mapping(uint256 => struct SharedStructsCrossChain.zone)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3588_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3287_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3287_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(zone)20912_storage": {
            "label": "struct SharedStructsCrossChain.zone",
            "members": [
              {
                "label": "zoneIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "coreTeamAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "chainId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "collAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "typeZone",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "rockIndexFrom",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rockIndexTo",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
